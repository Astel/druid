# Only the following three items are required (if using the embedded database, these three can be omitted, and the default configuration will be used), other configurations are not required
spring.datasource.url=jdbc:mysql://localhost:3306/mysql?useUnicode=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
# driver-class-name is not required and can be inferred from url
#spring.datasource.driver-class-name=org.h2.Driver

# Druid data source configuration, inherit the spring.datasource.* configuration, overwrite if the same
spring.datasource.druid.initial-size=2
spring.datasource.druid.max-active=30
spring.datasource.druid.min-idle=2
spring.datasource.druid.max-wait=1234
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=5
# spring.datasource.druid.max-open-prepared-statements= #Equivalent to the above max-pool-prepared-statement-per-connection-size
spring.datasource.druid.validation-query=select 1
spring.datasource.druid.validation-query-timeout=1
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.test-on-return=true
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.time-between-eviction-runs-millis=10000
spring.datasource.druid.min-evictable-idle-time-millis=30001
spring.datasource.druid.async-close-connection-enable=true


spring.datasource.druid.aop-patterns=com.alibaba.druid.spring.boot.demo.service.*

# Custom StatFilter configuration Other filters will no longer be demonstrated
spring.datasource.druid.filter.stat.db-type=h2
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000

# JPA
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto=create-drop

# Configure the following parameters to start the monitoring page, considering security issues, it is closed by default, and open on demand
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.web-stat-filter.enabled=true

# Configure log output
spring.datasource.druid.filter.slf4j.enabled=true
spring.datasource.druid.filter.slf4j.statement-create-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-open-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-close-after-log-enabled=false

# For more configuration properties, see the member variables in DruidDataSource (supported as long as there is a set method), or follow the IDE prompt, or check the official document
